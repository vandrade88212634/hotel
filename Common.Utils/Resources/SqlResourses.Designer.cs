//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Common.Utils.Resources {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "16.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    public class SqlResourses {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal SqlResourses() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("Common.Utils.Resources.SqlResourses", typeof(SqlResourses).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to [Payment].[spGetDataTransferFrozenNational].
        /// </summary>
        public static string GetDataTransferFrozenNational {
            get {
                return ResourceManager.GetString("GetDataTransferFrozenNational", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to [Conciliation].[spSearhExpirationDate].
        /// </summary>
        public static string GetLastDateDebtors {
            get {
                return ResourceManager.GetString("GetLastDateDebtors", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to SELECT [l].[idtipoLista],[w].[WarrantyGarId] AS [warrantyId], [dw].[WarrantyDetailGarId] AS [warrantyDetailId], [w].[WarrantyCode], [w].[WarrantyNumber], [w].[WarrantyType], [w].[Currency], [w].[Amount], [w].[Balance], [w].[Applied], [b].[bancoID] AS [financialEntityId], [b].[codigoBanco] AS [financialEntityCode], [b].[nombreBanco] AS [financialEntityName], [c].[empresaID] AS [companyId], [c].[codigo] AS [companyCode], [c].[nombre] AS [companyName], [c].[nombreCorto] AS [companyShortName], COALESCE(([c].[no [rest of string was truncated]&quot;;.
        /// </summary>
        public static string GetQueryDataGrid {
            get {
                return ResourceManager.GetString("GetQueryDataGrid", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to select Business, TypeData, DateExpiration, CompanyId from load.ImportsExportsExpirationTransfer IEET
        ///where IEET.Business = &apos;{0}&apos; and IEET.TypeData = {1} and IEET.DateExpiration = &apos;{2}&apos; and IEET.CompanyId = {3}.
        /// </summary>
        public static string ImportsExportsExpirationTransfer {
            get {
                return ResourceManager.GetString("ImportsExportsExpirationTransfer", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to SELECT [w].[WarrantyNumber], [c].[nombreCorto] AS [companyShortName], sp.ExpirationDate, b.nombreBanco as BankName, sp.TotalDebt as ValueDebt, CAST(CAST(w.Amount AS NUMERIC) AS FLOAT) as Amount, FORMAT(w.FinalWarrantyDate, &apos;yyyy-MM-yy&apos;) as Validity
        ///FROM [Warranty].[WarrantiesGar] AS [w]
        ///inner JOIN [Warranty].[WarrantyDetailGar] AS [dw] ON [w].[WarrantyGarId] = [dw].[WarrantyGarId]
        ///inner JOIN [Warranty].[BankWarrantyGar] AS [bw] ON [w].[WarrantyGarId] = [bw].[WarrantyGarId]
        ///inner JOIN [banco].[Banco] AS  [rest of string was truncated]&quot;;.
        /// </summary>
        public static string InvoiceDebtorsInformation {
            get {
                return ResourceManager.GetString("InvoiceDebtorsInformation", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to select b.[bancoID] FROM [banco].[CuentaBancaria] ba inner join [banco].[Banco] b on ba.[entidadBancariaId] = b.[bancoID] where ba.[cuentaBancariaID] = {0}.
        /// </summary>
        public static string QueryBank {
            get {
                return ResourceManager.GetString("QueryBank", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to SELECT	[E].[empresaID] AS [CompanyId], 
        ///		[E].[nit] AS [Nit], 
        ///		[E].[nombre] AS [CompanyName], 
        ///		[E].[fechaCreacion] AS [CreationDate], 
        ///		[E].[fechaModificacion] AS [ModificationDate], 
        ///		[E].[idUsuarioCrea] AS [CreationUser], 
        ///		[E].[idUsuarioActualiza] AS [ModificationUser], 
        ///		[E].[codigo] AS [CompanyCode], 
        ///		[E].[nombreCorto]  AS [ShortName]
        ///FROM [agente].[Empresa] E
        ///WHERE [E].[codigo] = {0}.
        /// </summary>
        public static string QueryCompany {
            get {
                return ResourceManager.GetString("QueryCompany", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to select tot.AgentCode,tot.companyShortname,tot.period,sum(tot.BankingCOP) as BankingCOP,sum(tot.Expiration) as Expiration,
        ///                                                            sum(tot.PrepaidValue) as PrepaidValue, sum(0) as Balance from (
        ///                                                            select ed.AgentCode, c.nombreCorto as companyShortName,ed.expirationDetailGarId,
        ///                                                            (select sum(wp.ValueFrozenApplied - wp.ValueReturnsApplied)  f [rest of string was truncated]&quot;;.
        /// </summary>
        public static string SqlCloseNationalGridOne {
            get {
                return ResourceManager.GetString("SqlCloseNationalGridOne", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to select tot.AgentCode,tot.companyShortname,tot.expirationdate,sum(tot.OutStandingBalance) as OutStandingBalance from (
        ///															select ed.AgentCode, c.nombreCorto as companyShortName,ed.InvoiceExpirationDate as expirationdate,
        ///															sum(ed.ValuePending) as OutStandingBalance ,
        ///															Sum(ed.FrozenValue) as PrepaidValue,@Period as period from load.LoadExpirationDetailgar ed  
        ///															inner join load.loadexpirationgar e on ed.expirationGarId = e.expirationGarId
        ///														 [rest of string was truncated]&quot;;.
        /// </summary>
        public static string SqlCloseNationalGridTwo {
            get {
                return ResourceManager.GetString("SqlCloseNationalGridTwo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to [Schema].[ValidateSchemaAgent].
        /// </summary>
        public static string ValidateAgentSchema {
            get {
                return ResourceManager.GetString("ValidateAgentSchema", resourceCulture);
            }
        }
    }
}
